// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package edu.mit.cci.turksnet;

import edu.mit.cci.turksnet.Node;
import edu.mit.cci.turksnet.Session_;
import edu.mit.cci.turksnet.Worker;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Node_Roo_Finder {
    
    public static TypedQuery<Node> Node.findNodesByWorker(Worker worker) {
        if (worker == null) throw new IllegalArgumentException("The worker argument is required");
        EntityManager em = Node.entityManager();
        TypedQuery<Node> q = em.createQuery("SELECT Node FROM Node AS node WHERE node.worker = :worker", Node.class);
        q.setParameter("worker", worker);
        return q;
    }

     public static TypedQuery<Node> Node.findNodesByWorkerIsNull() {
        EntityManager em = Node.entityManager();
        TypedQuery<Node> q = em.createQuery("SELECT Node FROM Node AS node WHERE node.worker IS NULL ", Node.class);
        return q;
    }
    
    public static TypedQuery<Node> Node.findNodesByWorkerAndSession_(Worker worker, Session_ session_) {
        if (worker == null) throw new IllegalArgumentException("The worker argument is required");
        if (session_ == null) throw new IllegalArgumentException("The session_ argument is required");
        EntityManager em = Node.entityManager();
        TypedQuery<Node> q = em.createQuery("SELECT Node FROM Node AS node WHERE node.worker = :worker AND node.session_ = :session_", Node.class);
        q.setParameter("worker", worker);
        q.setParameter("session_", session_);
        return q;
    }
    
}
